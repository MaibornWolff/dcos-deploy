name: Test and build package

on: [push]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest, windows-latest]
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install .
    - name: Run tests
      run: python -m unittest discover -s tests -p "*_test.py"

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
        pip install -r requirements-dev.txt
    - name: Build dist
      run: >
        pyinstaller dcos-deploy -F -n dcos-deploy
        --hidden-import dcosdeploy.modules.accounts
        --hidden-import dcosdeploy.modules.secrets
        --hidden-import dcosdeploy.modules.jobs
        --hidden-import dcosdeploy.modules.apps
        --hidden-import dcosdeploy.modules.frameworks
        --hidden-import dcosdeploy.modules.certs
        --hidden-import dcosdeploy.modules.repositories
        --hidden-import dcosdeploy.modules.edgelb
        --hidden-import dcosdeploy.modules.s3
        --hidden-import dcosdeploy.modules.taskexec
        --hidden-import dcosdeploy.modules.httpcall
        --hidden-import dcosdeploy.modules.iam_groups
        --hidden-import dcosdeploy.modules.iam_users
        --hidden-import dcosdeploy.modules.marathon_groups
    - name: Upload build artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-${{ matrix.os }}
        path: dist
